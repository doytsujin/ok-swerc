# Useful CGI stuff

fn dprint { echo $* >[1=2] }

fn http_redirect {
    if(~ $1 http://* https://*)
        t=$1
    if not if(~ $1 /*)
        t=$"base_url^$1
    if not
        t=$"base_url^$"req_path^$1
    echo 'Status: '^$2^'
Location: '^$t^'

'
    exit
}
fn perm_redirect { http_redirect $1 '301 Moved Permanantly' }

# This seems slightly improve performance, but might depend on httpd buffering behavior.
fn awk_buffer {
    awk '{
        buf = buf $0"\n"
        if(length(buf) > 1400) {
            printf "%s", buf
            buf = ""
        }
    }
    END { printf "%s", buf }'
}

# Cookies
fn get_cookie {
    ifs=';' { co=`{echo $HTTP_COOKIE} }

    # XXX: we might be adding a trailing new line?
    # The ' ?' is needed to deal with '; ' inter-cookie delimiter
    { for(c in $co) echo $c } | sed -n 's/^ ?'$1'=//p' 
}


fn static_file {
    echo 'Content-Type: '`{select_mime $1}
    echo
    cat $1
    exit
}

fn select_mime {
    m='text/plain'
    if(~ $1 *.css)
        m='text/css'
    if not if(~ $1 *.ico)
        m='image/x-icon'
    if not if(~ $1 *.png)
        m='image/png'
    if not if(~ $1 *.jpg *.jpeg)
        m='image/jpeg'
    if not if(~ $1 *.gif)
        m='image/gif'
    if not if(~ $1 *.pdf)
        m='application/pdf'
    echo $m
}

##############################################
# Generic rc programming helpers

# Manage nested lists
fn ll_add {
    _l=$1^_^$#$1
    $_l=$*(2-)
    $1=( $$1 $_l )
}
# Add to the head: dangerous if you shrink list by hand!
fn ll_addh {
    _l=$1^_^$#$1
    $_l=$*(2-)
    $1=( $_l $$1 )
}


NEW_LINE='
'
